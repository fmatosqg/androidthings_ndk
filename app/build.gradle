import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def executableName="xxxxx"
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.amazingapps.sample.thingssample"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                targets executableName
                cppFlags "-frtti -fexceptions"
                //abiFilters "armeabi", "armeabi-v7a"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }


}

dependencies {
    compile 'com.android.support:appcompat-v7:25.1.0'
    provided 'com.google.android.things:androidthings:0.1-devpreview'

}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd")
    return df.format(new Date())
}

android.applicationVariants.all { variant ->

    variant.outputs.each { output ->
        def apk = output.outputFile;
        def buildNumber = versionCode
        def newName = "thingssample" + "-" + versionName + "-" + buildNumber + "-" + buildTime() + ".apk";
        output.outputFile = new File(apk.parentFile, newName);
    }

    variant.assemble.doLast {
        com.android.build.gradle.internal.api.ApkVariantOutputImpl output = variant.outputs[0]

        println("Apk is ready: " + output.outputFile)
        println("Executable binaries are in " + "./app/.externalNativeBuild/cmake/debug/<architecture>/$executableName")
    }

}
